{"version":3,"sources":["Components/Logo/Logo.tsx","Components/Layout/ColumnLayout.tsx","Views/Home/Home.tsx","Views/Game/GameState.tsx","Components/Word/Word.tsx","Views/Game/SettingTraps.tsx","Components/Layout/FullScreenLayout.tsx","Views/Timer/Timer.tsx","Components/Loader/Loader.tsx","Views/Game/PassDeviceToPlayer.tsx","Views/Game/WaitingForOpponents.tsx","Views/Game/WaitingForOpponentsToJoin.tsx","Views/Game/InitializedGame.tsx","Views/Game/Game.tsx","index.tsx","Components/Logo/logo.svg"],"names":["style","margin","maxWidth","Logo","alt","src","logo","width","height","display","flexDirection","justifyContent","alignItems","textAlign","ColumnLayout","children","Container","Home","props","navigate","useNavigate","useState","gameId","setGameId","TextField","placeholder","variant","InputLabelProps","shrink","onChange","e","target","value","Button","disabled","length","color","onClick","window","navigator","vibrate","GameState","teamId","this","getTeamId","currentTeam","teamsReady","trapsReady","playerReady","teams","initTeam","localStorage","getItem","isUuid","newTeamId","uuid","setItem","words","Math","floor","random","gameState","opponentsTeams","Object","entries","filter","key","map","entry","Error","keys","includes","values","team","traps","reduce","a","b","level","trapsRequired","word","getNextWord","textTransform","fontSize","Word","content","form","SettingTraps","setTraps","state","setState","done","setDone","ready","indexOf","noValidate","autoComplete","label","handleChange","index","trap","assign","defaultStyle","FullScreenLayout","className","Timer","title","subtitle","timeout","onTimeout","counter","setCounter","useEffect","setTimeout","animationDuration","Loader","CircularProgress","size","PassDeviceToPlayer","onConfirm","WaitingForOpponents","WaitingForOpponentsToJoin","href","InitializedGame","setGameState","preparation","setPreparation","opponentTeam","getOpponentTeam","console","log","isEqual","require","database","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Game","localGameState","setLocalGameState","useEffectOnce","ref","on","snapshot","val","getRequiredTrapsCount","getSetTrapsCount","preparationReady","newGameState","init","containsTeam","set","theme","createMuiTheme","palette","primary","blue","ReactDOM","render","ThemeProvider","CssBaseline","basepath","path","default","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.4be1428b.chunk.js","sourcesContent":["import logo from \"./logo.svg\";\nimport React from \"react\";\n\nconst style = {\n    margin: 30,\n    maxWidth: 500\n}\n\nexport function Logo() {\n    return <img style={style} alt=\"word-traps\" src={logo}/>;\n}","import React, { FunctionComponent, HTMLAttributes } from 'react';\nimport Container from \"@material-ui/core/Container\";\n\nconst style = {\n    width: '100%',\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column' as 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    textAlign: 'center' as 'center',\n}\n\nconst ColumnLayout: FunctionComponent<HTMLAttributes<HTMLElement>> = ({ children }) => (\n    <Container style={{ height: '100%' }}>\n        <main style={style}>\n            {children}\n        </main>\n    </Container>\n);\n\nexport default ColumnLayout;\n","import React, { useState } from 'react';\nimport { Logo } from \"../../Components/Logo/Logo\";\nimport { RouteComponentProps, useNavigate } from \"@reach/router\";\nimport ColumnLayout from \"../../Components/Layout/ColumnLayout\";\nimport { TextField } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\n\nfunction Home(props: RouteComponentProps) {\n    const navigate = useNavigate();\n    const [gameId, setGameId] = useState<string>(\"\");\n\n    function handleClick() {\n        window.navigator.vibrate(200);\n        navigate(`/game/${gameId}`);\n    }\n\n    return (\n        <ColumnLayout>\n            <Logo/>\n            <TextField placeholder=\"wprowadź nazwę gry\" margin=\"normal\" variant=\"outlined\"\n                       InputLabelProps={{ shrink: true }} onChange={(e) => setGameId(e.target.value)}/>\n            <Button disabled={!gameId.length} color=\"primary\" onClick={handleClick} variant=\"contained\">Nowa\n                Gra</Button>\n        </ColumnLayout>\n    );\n}\n\nexport default Home;\n","import { TeamState } from \"./TeamState\";\nimport { isUuid, uuid } from \"uuidv4\";\n\nexport interface GameState {\n    currentTeam: string,\n    teamsReady: boolean;\n    trapsReady: boolean;\n    playerReady: boolean;\n    teams: {\n        [key: string]: TeamState\n    };\n}\n\nexport class GameState {\n    static trapsRequired = [0, 3, 4, 5, 6, 7];\n\n    static init(): GameState {\n        const teamId = this.getTeamId();\n        return {\n            currentTeam: teamId,\n            teamsReady: false,\n            trapsReady: false,\n            playerReady: false,\n            teams: {\n                [teamId]: this.initTeam()\n            },\n        };\n    }\n\n    static getTeamId() {\n        const teamId = localStorage.getItem(\"teamId\");\n        if (teamId !== null && isUuid(teamId)) return teamId;\n        const newTeamId = uuid();\n        localStorage.setItem('teamId', newTeamId);\n        return newTeamId;\n    }\n\n    static getNextWord(): string {\n        const words = ['Wampir', 'Piłkarz', 'Murarz', 'Namiot', 'Kostka', 'Sygnał'];\n        return words[Math.floor(Math.random() * words.length)];\n    }\n\n    static getOpponentTeam(gameState: GameState): TeamState {\n        const opponentsTeams: TeamState[] = Object.entries<TeamState>(gameState.teams || {}).filter(key => key[0] !== this.getTeamId()).map(entry => entry[1]);\n        if (opponentsTeams.length) {\n            return opponentsTeams[0];\n        }\n        throw new Error(\"opponent not found!\");\n    }\n\n    static containsTeam(gameState: GameState) {\n        return Object.keys(gameState.teams).includes(this.getTeamId());\n    }\n\n    static getSetTrapsCount(gameState: GameState) {\n        return Object.values<TeamState>(gameState.teams || {})\n            .map(team => team.traps || [])\n            .map(traps => traps.length)\n            .reduce((a: number, b: number) => a + b);\n    }\n\n    static getRequiredTrapsCount(gameState: GameState) {\n        return Object.values<TeamState>(gameState.teams || {})\n            .map(team => team.level)\n            .reduce((a, b) => this.trapsRequired[a] + this.trapsRequired[b])\n    }\n\n    static initTeam(): TeamState {\n        return {\n            level: 1,\n            traps: [],\n            word: this.getNextWord()\n        };\n    }\n}\n\n","import React from \"react\";\n\ninterface WordProps {\n    content: string\n}\n\nconst style = {\n    textTransform: 'uppercase' as 'uppercase',\n    fontSize: '10vw'\n}\n\nfunction Word({ content }: WordProps) {\n    return (\n        <h1 style={style}>{content}</h1>\n    );\n}\n\nexport default Word;","import React, { useState } from 'react';\nimport ColumnLayout from \"../../Components/Layout/ColumnLayout\";\nimport Word from \"../../Components/Word/Word\";\nimport { TextField } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\n\ninterface TrapsProps {\n    word: string;\n    setTraps(traps: string[]): void;\n}\n\nconst style = {\n    form: {\n        display: 'flex',\n        flexDirection: 'column' as 'column'\n    }\n}\n\nfunction SettingTraps({ word, setTraps }: TrapsProps) {\n    const [state, setState] = useState<string[]>([]);\n    const [done, setDone] = useState<boolean>(false);\n    const ready = state.length === 3 && state.indexOf('') === -1;\n    return (\n        <ColumnLayout>\n            <p>to słowo dla drużyny przeciwnej</p>\n            <Word content={word}/>\n            <p>Zastawcie wasze pułapki!</p>\n            <form noValidate autoComplete=\"off\" style={style.form}>\n                <TextField disabled={done} placeholder=\"wprowadź słowo\" label=\"Pierwsza pułapka\" margin=\"normal\"\n                           variant=\"outlined\"\n                           InputLabelProps={{ shrink: true }} onChange={(e) => handleChange(0, e.target.value)}/>\n                <TextField disabled={done} placeholder=\"wprowadź słowo\" label=\"Druga pułapka\" margin=\"normal\"\n                           variant=\"outlined\"\n                           InputLabelProps={{ shrink: true }} onChange={(e) => handleChange(1, e.target.value)}/>\n                <TextField disabled={done} placeholder=\"wprowadź słowo\" label=\"Trzecia pułapka\" margin=\"normal\"\n                           variant=\"outlined\"\n                           InputLabelProps={{ shrink: true }} onChange={(e) => handleChange(2, e.target.value)}/>\n            </form>\n            <Button disabled={!ready} color=\"primary\" variant=\"contained\" onClick={handleReady}>Gotowe!</Button>\n            {done ? <p>oczekiwanie na przeciwników</p> : null}\n        </ColumnLayout>\n    );\n\n    function handleReady() {\n        setTraps(state);\n        setDone(true);\n    }\n\n    function handleChange(index: number, trap: string) {\n        setState(Object.assign([], state, { [index]: trap }));\n    }\n}\n\nexport default SettingTraps","import React, { FunctionComponent, HTMLAttributes } from 'react';\n\ninterface AppLayoutProps extends React.PropsWithChildren<any> {\n}\n\nconst defaultStyle = {\n    width: '100%',\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column' as 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    textAlign: 'center' as 'center',\n}\n\nconst FullScreenLayout: FunctionComponent<HTMLAttributes<HTMLElement>> = ({ children, className, style }) => {\n    return (\n        <main style={Object.assign({}, defaultStyle, style)} className={className}>\n            {children}\n        </main>\n    );\n}\n\nexport default FullScreenLayout;\n","import React, { useEffect, useState } from 'react';\nimport './Timer.css';\nimport FullScreenLayout from \"../../Components/Layout/FullScreenLayout\";\nimport Word from \"../../Components/Word/Word\";\n\ninterface TimerProps {\n    title: string;\n    subtitle: string;\n    timeout: number;\n\n    onTimeout(): void;\n}\n\nfunction Timer({ title, subtitle, timeout, onTimeout }: TimerProps) {\n    const [counter, setCounter] = useState(timeout);\n    useEffect(() => {\n        counter > 0 && setTimeout(() => setCounter(counter - 1), 1000);\n        counter === 0 && onTimeout();\n    }, [counter, timeout, onTimeout]);\n\n    return (\n        <FullScreenLayout style={{ animationDuration: `${timeout}s` }} className=\"timer timer-animation\">\n            <small className=\"subtitle\">{subtitle}</small>\n            <Word content={title}/>\n            <p className=\"clock\">{counter}</p>\n        </FullScreenLayout>\n    );\n}\n\nexport default Timer;\n","import React from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nexport default function Loader({ title }: { title?: string }) {\n    return (\n        <div>\n            <CircularProgress size={64} style={{margin: 20}} color=\"secondary\"/>\n            {title ? <h1>{title}</h1> : ''}\n        </div>\n    );\n}","import React from 'react';\nimport Loader from \"../../Components/Loader/Loader\";\nimport FullScreenLayout from \"../../Components/Layout/FullScreenLayout\";\nimport { Button } from \"@material-ui/core\";\n\nfunction PassDeviceToPlayer({ onConfirm }: { onConfirm: () => void }) {\n    return <FullScreenLayout>\n        <Loader title=\"podaj telefon graczowi zgadującemu\"/>\n        <Button onClick={onConfirm} variant=\"contained\" color=\"primary\">Ok</Button>\n    </FullScreenLayout>;\n}\n\nexport default PassDeviceToPlayer\n","import React from 'react';\nimport Loader from \"../../Components/Loader/Loader\";\nimport FullScreenLayout from \"../../Components/Layout/FullScreenLayout\";\n\nfunction WaitingForOpponents() {\n    return <FullScreenLayout>\n        <Loader title=\"oczekiwanie na ruch drużyny przeciwnej...\"/>\n    </FullScreenLayout>;\n}\n\nexport default WaitingForOpponents\n","import React from 'react';\nimport ColumnLayout from \"../../Components/Layout/ColumnLayout\";\nimport Loader from \"../../Components/Loader/Loader\";\n\nfunction WaitingForOpponentsToJoin({ gameId }: { gameId: string }) {\n    return <ColumnLayout>\n        <Loader title=\"czekamy na drugą drużynę\"/>\n        <pre>\n            <a href={`http://localhost:3000/game/${gameId}`}>http://localhost:3000/game/{gameId}</a>\n        </pre>\n    </ColumnLayout>;\n}\n\nexport default WaitingForOpponentsToJoin\n","import React, { useState } from \"react\";\nimport { GameState } from \"./GameState\";\nimport SettingTraps from \"./SettingTraps\";\nimport Timer from \"../Timer/Timer\";\nimport PassDeviceToPlayer from \"./PassDeviceToPlayer\";\nimport WaitingForOpponents from \"./WaitingForOpponents\";\nimport WaitingForOpponentsToJoin from \"./WaitingForOpponentsToJoin\";\n\nfunction InitializedGame({ gameId, gameState, setGameState }: InitializedGameProps) {\n    const [preparation, setPreparation] = useState(false);\n\n    if (!gameState.teamsReady) {\n        return <WaitingForOpponentsToJoin gameId={gameId}/>\n    }\n\n    if (!gameState.trapsReady) {\n        const opponentTeam = GameState.getOpponentTeam(gameState);\n        return <SettingTraps word={opponentTeam.word} setTraps={traps => {\n            gameState.teams[GameState.getTeamId()].traps = traps;\n            setGameState(gameState);\n        }}/>\n    }\n\n    if (!gameState.playerReady) {\n        if (gameState.currentTeam === GameState.getTeamId()) {\n            return <PassDeviceToPlayer onConfirm={() => setGameState({ ...gameState, playerReady: true })}/>;\n        }\n        return <WaitingForOpponents/>;\n    }\n\n    if (gameState.playerReady) {\n        if (!preparation) {\n            return <Timer key=\"preparation\" timeout={3} title={GameState.getOpponentTeam(gameState).word}\n                          subtitle=\"⏳ przygotuj się!\"\n                          onTimeout={() => setPreparation(true)}/>;\n        }\n        return <Timer key=\"playtime\" timeout={30} title={GameState.getOpponentTeam(gameState).word}\n                      subtitle=\"🗣️ opowiadaj!\"\n                      onTimeout={() => console.log('timeout!')}/>;\n    }\n\n    return <p>loading...</p>;\n}\n\ninterface InitializedGameProps {\n    gameId: string,\n    setGameState: (gameState: GameState) => void;\n    gameState: GameState\n}\n\nexport default InitializedGame;","import React, { useState } from 'react';\nimport { GameState } from \"./GameState\";\nimport { useEffectOnce } from \"react-use\";\nimport firebase from \"firebase\";\nimport InitializedGame from \"./InitializedGame\";\nimport Loader from \"../../Components/Loader/Loader\";\nimport { RouteComponentProps } from \"@reach/router\";\nimport FullScreenLayout from \"../../Components/Layout/FullScreenLayout\";\n\nconst isEqual = require(\"react-fast-compare\");\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyAB5xPgiX6lio_Ex_i1G5GWIrQqqqznlio\",\n    authDomain: \"word-traps.firebaseapp.com\",\n    databaseURL: \"https://word-traps.firebaseio.com\",\n    projectId: \"word-traps\",\n    storageBucket: \"word-traps.appspot.com\",\n    messagingSenderId: \"1055810547251\",\n    appId: \"1:1055810547251:web:6ae6b37606fb568b983d46\"\n};\n\nconst database = firebase.initializeApp(firebaseConfig).database();\n\nfunction Game({ gameId }: GameProps) {\n    if (!gameId) throw new Error(\"no game id\");\n    const [localGameState, setLocalGameState] = useState();\n    useEffectOnce(() => {\n        database.ref(`/game/${gameId}`).on('value', (snapshot: { val: () => GameState; }) => {\n            const gameState: GameState = snapshot.val();\n            if (isEqual(localGameState, gameState)) {\n                console.log('rerender skipped');\n                return;\n            }\n            if (!gameState) {\n                let newGameState = GameState.init();\n                setGameState(gameId, newGameState)\n                setLocalGameState({\n                    ...newGameState,\n                    teamsReady: false,\n                    trapsReady: false,\n                    playerReady: false,\n                    preparationReady: false\n                });\n            } else {\n                setLocalGameState({\n                    ...gameState,\n                    teamsReady: Object.keys(gameState.teams).length === 2,\n                    trapsReady: GameState.getRequiredTrapsCount(gameState) === GameState.getSetTrapsCount(gameState),\n                    playerReady: false,\n                    preparationReady: false\n                });\n            }\n        });\n    })\n    if (!localGameState) return <FullScreenLayout><Loader title=\"Ładowanie\"/></FullScreenLayout>;\n    if (!GameState.containsTeam(localGameState)) {\n        localGameState.teams[GameState.getTeamId()] = GameState.initTeam();\n        setGameState(gameId, localGameState);\n        return <Loader title=\"joining game...\"/>;\n    }\n    return <InitializedGame gameId={gameId} gameState={localGameState}\n                            setGameState={(newGameState) => setGameState(gameId, newGameState)}/>;\n\n    function setGameState(gameId: string, gameState: GameState) {\n        database.ref(`/game/${gameId}`).set(gameState)\n        setLocalGameState(gameState);\n    }\n}\n\ninterface GameProps extends RouteComponentProps {\n    gameId?: string;\n}\n\nexport default Game;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { Router } from \"@reach/router\";\nimport Home from \"./Views/Home/Home\";\nimport Game from \"./Views/Game/Game\";\nimport createMuiTheme from \"@material-ui/core/styles/createMuiTheme\";\nimport blue from \"@material-ui/core/colors/blue\";\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: blue,\n    },\n});\n\nReactDOM.render(\n    <ThemeProvider theme={theme}>\n        <CssBaseline/>\n        <Router basepath=\"/word-traps\">\n            <Home path=\"/\" default={true}/>\n            <Game path=\"/game/:gameId\"/>\n        </Router>\n    </ThemeProvider>,\n    document.getElementById('root')\n);\n","module.exports = __webpack_public_path__ + \"static/media/logo.ff5abeb2.svg\";"],"sourceRoot":""}